worker_processes 1;

events {
    worker_connections 1024;
}

http {
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    include       mime.types;
    default_type  application/octet-stream;

    # ðŸ”¹ Custom log format: logs timestamp and request path
    log_format custom '$remote_addr - [$time_local] "$request" $status $body_bytes_sent';

    access_log /var/log/nginx/access.log custom;

    sendfile        on;
    keepalive_timeout  65;

    upstream service1 {
        server service1:8001;
    }

    upstream service2 {
        server service2:8002;
    }

    server {
        listen 80;

        # ðŸ”¹ Route /service1/ to Service 1
        location /service1/ {
            proxy_pass http://service1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            error_page 404 = /fallback_service1;
            proxy_intercept_errors on;   
        }

        # ðŸ”¹ Route /service2/ to Service 2
        location /service2/ {
            proxy_pass http://service2/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            error_page 404 = /fallback_service2;
            proxy_intercept_errors on;   
        }
    location = /fallback_service1 {
        default_type text/plain;
        return 404 "Service 1 route not found. Try /service1/ping or /service1/hello.\n";
    }
        location = /fallback_service2 {
        default_type text/plain;
        return 404 "Service 2 route not found. Try /service2/ping or /service2/hello.\n";
    }
        # Optional: catch-all to return a default 404 message
        location / {
            return 404 "Invalid route. Try /service1 or /service2.\n";
        }
    }
}
